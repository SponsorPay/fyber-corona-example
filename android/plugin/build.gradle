apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
}

def coronaEnterpriseDir = "$rootDir/CoronaEnterprise"

repositories {
    maven {
        name "Fyber's maven repo"
        url "https://fyber.bintray.com/maven"
    }
}

configurations {
    provided
}

dependencies {
    compile fileTree(dir: "$coronaEnterpriseDir/Corona/android/lib/Corona/libs", include: '*.jar')
    compile fileTree(dir: 'libs', include: '*.jar')

    compile 'com.fyber:fyber-sdk:8.3.2'
    provided 'com.fyber:fyber-annotations:1.1.0'
    provided 'com.fyber:fyber-annotations-compiler:1.2.0'

    compile 'com.fyber.mediation:adcolony:2.3.3-r1@aar'
    compile 'com.fyber.mediation:applovin:6.1.5-r1@aar'
    compile 'com.fyber.mediation:unityads:1.5.6-r2@aar'
    compile 'com.fyber.mediation:vungle:3.3.4-r1@aar'

    compile 'com.fyber.mediation:facebook:4.10.0-r2@aar'

    // Vungle third-party dependencies
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'javax.inject:javax.inject:1'
    compile 'com.nineoldandroids:library:2.4.0'
}

task exportPluginJar(type: Copy, description: 'place the plugin JAR file in the outputs directory and give it a name from the AndroidManifest.xml') {
    def pluginName = new XmlSlurper().parse(file('src/main/AndroidManifest.xml')).@package.text()
    from "$buildDir/intermediates/bundles/release/"
    into "$buildDir/outputs/jar"
    include 'classes.jar'
    rename 'classes.jar', "${pluginName}.jar"

    doFirst {
        println '== exportPluginJar =='
    }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn('exportPluginJar')
}
